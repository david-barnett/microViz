% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/taxatree_plots.R
\name{taxatree_plots}
\alias{taxatree_plots}
\alias{taxatree_plotkey}
\title{Plot taxonomic stats on a ggraph tree}
\usage{
taxatree_plots(
  ps,
  models_list,
  preset_style = NULL,
  var_selection = NULL,
  size_stat = "taxon_mean",
  colour_stat = NULL,
  max_node_size = 8,
  max_edge_width = max_node_size - 2,
  sig_var = NULL,
  sig_threshold = 0.05,
  sig_stroke_width = 1.5,
  colour_palette = "Green-Brown",
  reverse_colours = FALSE,
  luminance_l2 = 80,
  colour_lims = c(-3, 3),
  layout = "tree",
  drop_tax_levels = TRUE
)

taxatree_plotkey(
  ps,
  size_stat = "taxon_mean",
  colour = "grey",
  max_node_size = 8,
  max_edge_width = max_node_size - 3,
  layout = "tree",
  label = utils::tail(phyloseq::rank_names(ps), 2)[1],
  tax_levels = phyloseq::rank_names(ps)
)
}
\arguments{
\item{ps}{phyloseq object}

\item{models_list}{list of lists of models, as output by taxatree_models}

\item{preset_style}{e.g. "bbdml", optional character string for quick presets}

\item{var_selection}{optionally only plot trees for this selection of predictor variables}

\item{size_stat}{name of variable to scale size of nodes and edges (natural log scale)}

\item{colour_stat}{name of variable to scale colour/fill of nodes and edges (natural log scale)}

\item{max_node_size}{set this to avoid overlapping nodes at different scales}

\item{max_edge_width}{max edge width (optionally relative to max node size)}

\item{sig_var}{optional name of variable used to define statistical significance (outlines significant nodes) - NULL for no outlines}

\item{sig_threshold}{value of sig_var below which statistical significance outlines are drawn}

\item{sig_stroke_width}{fixed width of statistical significance node outlines}

\item{colour_palette}{any diverging hcl colour palette name see: \code{colorspace::hcl_palettes("diverging", n = 7, plot = TRUE)}}

\item{reverse_colours}{reverse direction of colour scale?}

\item{luminance_l2}{luminance of colourscale midpoint (higher is lighter)}

\item{colour_lims}{limits of colour and fill scale, used to harmonise across several plots (values squished to fit this range!)}

\item{layout}{name of ggraph layout or manually specified layout with data.frame of x and y coordinates}

\item{drop_tax_levels}{remove taxonomic levels from tree plots if stats are not available for them from models list}

\item{colour}{fixed colour of points and edges}

\item{label}{names of taxonomic ranks at which to label taxa}

\item{tax_levels}{names of tax ranks to include in plot}
}
\value{
ggraph ggplot (or list of)
}
\description{
\itemize{
\item Uses a phyloseq object to make a tree graph structure from the taxonomic table.
\item Then adds statistical results, i.e. the output out taxatree_models (from the same phyloseq).
\item Arguments \code{colour_stat} and (optionally) \code{sig_var} must be variables that can be extracted from the model objects in \code{models_list}.
}

Plots same layout as \code{taxatree_plots}, but in a fixed colour and intended to be shown bigger than the other (so different size defaults)
}
\details{
Uses ggraph (see help for main underlying graphing function with ?ggraph::ggraph)
}
\examples{
# corncob stats testing
library(dplyr)
library(phyloseq)
library(microbiome)
library(corncob)
library(patchwork) # for arranging grid of plots

data(dietswap)
ps <- dietswap

# create some binary variables for easy visualisation
ps <- ps \%>\% ps_mutate(
  female = if_else(sex == "female", 1, 0, NaN),
  overweight = if_else(bmi_group == "overweight", 1, 0, NaN),
  obese = if_else(bmi_group == "obese", 1, 0, NaN)
)

# This example dataset has some taxa with the same name for phylum and family...
# We can fix problems like this with the tax_prepend_ranks function
ps <- tax_prepend_ranks(ps)

# filter out rare taxa
ps <- ps \%>\% tax_filter(min_prevalence = 0.1, min_total_abundance = 10000)

# specify variables used for modelling
models <- taxatree_models(ps, tax_levels = 1:3, formula = ~ female + obese, verbose = FALSE)
plots <- taxatree_plots(ps, models, preset_style = "bbdml")
wrap_plots(plots, guides = "collect") & theme(legend.position = "bottom")
library(dplyr)
library(phyloseq)
library(microbiome)

data(dietswap)
ps <- dietswap

# This example dataset has some taxa with the same name for phylum and family...
# We can fix problems like this with the tax_prepend_ranks function
ps <- tax_prepend_ranks(ps)

# filter out rare taxa
ps <- ps \%>\% tax_filter(min_prevalence = 0.1, min_total_abundance = 10000)
taxatree_plotkey(ps)
}
