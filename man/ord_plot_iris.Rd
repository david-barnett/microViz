% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ord_plot_iris.R
\name{ord_plot_iris}
\alias{ord_plot_iris}
\title{Circular compositional barplot sorted by ordination angle}
\usage{
ord_plot_iris(
  data,
  ps = NULL,
  axes = 1:2,
  scaling = "species",
  tax_level,
  n_taxa = 10,
  taxon_renamer = function(x) identity(x),
  palette = c("grey90", rev(distinct_palette(n_taxa))),
  keep_all_vars = FALSE,
  anno_colour = NULL,
  anno_colour_style = list(),
  anno_binary = NULL,
  anno_binary_style = list()
)
}
\arguments{
\item{data}{ps_extra list output of ord_calc}

\item{ps}{phyloseq object containing untransformed counts if needed (must otherwise be identical to ps used to make data!)}

\item{axes}{which 2 axes of ordination to use for ordering}

\item{scaling}{ordination scaling option: "species" or "sites" scaled?}

\item{tax_level}{taxonomic aggregation level (from rank_names(ps))}

\item{n_taxa}{how many taxa to colour show distinct colours for (all other taxa grouped into "Other").}

\item{taxon_renamer}{function to rename taxa in the legend}

\item{palette}{colour palette}

\item{keep_all_vars}{slows down processing but is required for any post-hoc plot customisation options}

\item{anno_colour}{name of sample_data variable to use for colouring geom_segment annotation ring}

\item{anno_colour_style}{list of further arguments passed to geom_segment e.g. size}

\item{anno_binary}{name(s) of binary sample_data variable(s) (levels T/F or 1/0) to use for filtered geom_point annotation ring(s) (annotates at TRUE values)}

\item{anno_binary_style}{list of further arguments passed to geom_point e.g. colour, size, y, etc.}
}
\value{
ggplot
}
\description{
\itemize{
\item Order of samples extracted from ordination axes in \code{data}. (\code{ord_calc} output)
\item \code{ord_plot_iris} Uses the phyloseq from \code{data} for plotting compositions if no problematic transform mentioned in \code{data$info}
\item Otherwise, ps must be a phyloseq object containing untransformed counts.
\item (\code{ps} must be otherwise identical to the ps used to make \code{data}!)
}
}
\examples{
library(dplyr)
library(ggplot2)
data("dietswap", package = "microbiome")

# although these iris plots are great for 100s of samples
# we'll take a subset of the data (for speed in this example)
ps <- dietswap \%>\%
  ps_filter(timepoint \%in\% c(1, 2)) \%>\%
  # copy an otu to the sample data
  ps_otu2samdat("Prevotella melaninogenica et rel.") \%>\%
  # create a couple of useful variables
  ps_mutate(
    female = sex == "female",
    african = nationality == "AFR",
    log_P.melaninogenica = log10(Prevotella.melaninogenica.et.rel. + 1)
  )

# define a function for taking the end off the long genus names in this dataset
tax_renamer <- function(tax) {
  stringr::str_remove(tax, " [ae]t rel.")
}

ord <- ps \%>\%
  tax_agg("Genus") \%>\%
  dist_calc("aitchison") \%>\%
  ord_calc("PCoA")

# ordination plot for comparison
ord \%>\% ord_plot(
  color = "log_P.melaninogenica", size = 3
)

ord_plot_iris(
  data = ord,
  tax_level = "Genus",
  n_taxa = 10,
  anno_colour = "nationality",
  anno_colour_style = list(size = 3),
  anno_binary = "female",
  anno_binary_style = list(shape = "F", size = 2.5),
  taxon_renamer = tax_renamer
) +
  scale_colour_brewer(palette = "Dark2")

# Using PCA for ordination after transformations (e.g. clr) means the untransformed taxonomic
# data are not available for plotting as compositions.
# This means you also need to provide the untransformed phyloseq object e.g.

clr_pca <- ps \%>\%
  tax_agg("Genus") \%>\%
  tax_transform("clr") \%>\%
  ord_calc("PCA")

plot1 <- clr_pca \%>\% ord_plot(
  plot_taxa = 6:1, tax_vec_length = 0.6,
  colour = "gray50", shape = "nationality",
  taxon_renamer = tax_renamer,
  auto_caption = NA, center = TRUE,
) +
  scale_shape_manual(values = c(AFR = "circle", AAM = "circle open"))

iris <- ord_plot_iris(
  data = clr_pca,
  ps = ps, n_taxa = 15,
  tax_level = "Genus",
  taxon_renamer = tax_renamer,
  anno_binary = "african",
  anno_binary_style = list(y = 1.05, colour = "gray50", shape = "circle", size = 0.5)
) +
  # shrink legend text size
  theme(legend.text = element_text(size = 7))

cowplot::plot_grid(plot1, iris, nrow = 1, align = "h", axis = "b", rel_widths = 3:4)

# you can add multiple rings of binary annotations
ord_plot_iris(
  data = clr_pca,
  ps = ps, n_taxa = 15,
  tax_level = "Genus",
  taxon_renamer = tax_renamer,
  anno_binary = c("african", "female"),
  anno_binary_style = list(
    colour = c("gray50", "coral"),
    shape = c("circle", "F"), size = c(0.5, 2)
  )
) +
  theme(legend.text = element_text(size = 7))
}
