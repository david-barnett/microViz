% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ord_plot_iris.R
\name{ord_plot_iris}
\alias{ord_plot_iris}
\title{Circular compositional barplot sorted by ordination angle}
\usage{
ord_plot_iris(
  data,
  axes = 1:2,
  scaling = "species",
  tax_level,
  n_taxa = 10,
  keep_all_vars = FALSE,
  anno_colour,
  anno_colour_style = list(),
  anno_binary,
  anno_binary_style = list()
)
}
\arguments{
\item{data}{list output of ord_calc}

\item{axes}{which 2 axes of ordination to use for ordering}

\item{scaling}{ordination scaling option: "species" or "sites" scaled?}

\item{tax_level}{taxonomic aggregation level (from rank_names(ps))}

\item{n_taxa}{how many taxa to colour show distinct colours for (all other taxa grouped into "Other").}

\item{keep_all_vars}{slows down processing but is required for any post-hoc plot customisation options}

\item{anno_colour}{name of sample_data variable to use for colouring geom_segment annotation ring}

\item{anno_colour_style}{list of further arguments passed to geom_segment e.g. size}

\item{anno_binary}{name of binary sample_data variable (levels T/F or 1/0) to use for filtered geom_point annotation ring (annotates at TRUE values)}

\item{anno_binary_style}{list of further arguments passed to geom_point e.g. colour, size, etc.}
}
\value{
ggplot
}
\description{
Circular compositional barplot sorted by ordination angle
}
\examples{
library(dplyr)
data("dietswap", package = "microbiome")

ps <- dietswap \%>\%
ps_filter(timepoint \%in\% c(1,2)) \%>\%
  ps_otu2samdat("Prevotella melaninogenica et rel.") \%>\%
  ps_mutate(
    female = sex == "female",
    log_P.melaninogenica = log10(Prevotella.melaninogenica.et.rel. + 1)
  )

ord <- ps \%>\%
  dist_calc("aitchison") \%>\%
  ord_calc("PCoA")

# ordination plot for comparison
ord_plot(ord, color = "log_P.melaninogenica", size = 3)

ord_plot_iris(
  data = ord,
  tax_level = "Genus",
  n_taxa = 12,
  anno_colour = "nationality",
  anno_colour_style = list(size = 3),
  anno_binary = "female",
  anno_binary_style = list(shape = "F", size = 3)
) +
ggplot2::scale_colour_brewer(palette = "Dark2")

}
