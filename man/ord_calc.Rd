% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ord_calc.R
\name{ord_calc}
\alias{ord_calc}
\title{Ordinate phyloseq object or distance matrix computed by dist_calc}
\usage{
ord_calc(
  data,
  method = c("PCoA", "PCA", "CCA", "RDA", "CAP")[1],
  constraints = 1,
  conditions = NULL,
  return = "all",
  verbose = TRUE,
  ...
)
}
\arguments{
\item{data}{list object output from dist_calc or tax_agg (if no distance calculation required e.g. for RDA)}

\item{method}{which ordination method to use? currently one of 'PCoA', 'PCA' or 'CCA'}

\item{constraints}{(a vector of) valid variable name(s) to constrain PCoA or RDA analyses, or leave as 1 for unconstrained ordination}

\item{conditions}{(a vector of) valid variable name(s) to partial these out of PCoA or RDA analyses with Condition(), or leave as NULL}

\item{return}{choose which parts of list object to return}

\item{verbose}{if TRUE or "max", message about scaling and missings etc.}

\item{...}{optional arguments passed on to phyloseq::ordinate()}
}
\value{
list object (or named parts)
}
\description{
Extends functionality of phyloseq::ordinate(). Results can be used directly in ord_plot.
}
\examples{
library(phyloseq)
library(vegan)
data("dietswap", package = "microbiome")

# create a couple of numerical variables to use as constraints
dietswap <- ps_mutate(
  dietswap,
  female = dplyr::if_else(sex == "female", true = 1, false = 0),
  weight = dplyr::recode(bmi_group, obese = 3, overweight = 2, lean = 1)
)

# add a couple of missing values to demo automated dropping of observations with missings
sample_data(dietswap)$female[c(3, 4)] <- NA

# compute ordination
test <- dietswap \%>\%
  tax_agg("Genus") \%>\%
  dist_calc("bray") \%>\%
  ord_calc(constraints = c("weight", "female"))
# familiarise yourself with the structure of the returned list object
str(test, max.level = 1)

# compute RDA ("aitchison distance") directly from phyloseq (and demo return argument)
test2 <- dietswap \%>\%
  tax_agg("Genus") \%>\%
  tax_transform("clr") \%>\%
  ord_calc(method = "RDA", constraints = c("weight", "female"), return = "ordination")
# plot with oldschool vegan graphics to show it returns a standard interoperable ordination object
ordiplot(test2)
}
