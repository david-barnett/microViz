% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/heatmaps.R
\name{cor_heatmap}
\alias{cor_heatmap}
\title{Microbe-to-sample-data correlation heatmap}
\usage{
cor_heatmap(
  data,
  taxa = NA,
  tax_anno = taxAnnotation(Prev. = anno_tax_prev(), Abun. = anno_tax_box()),
  taxon_renamer = identity,
  vars = NA,
  var_anno = NULL,
  cor = c("pearson", "kendall", "spearman"),
  cor_use = "everything",
  colors = heat_palette(palette = "Blue-Red 2", sym = TRUE),
  numbers = heat_numbers(decimals = 1, col = "black", fontface = "plain"),
  taxa_side = "right",
  vars_side = adjacent_side(taxa_side),
  seriation_method = "OLO_ward",
  seriation_dist = "euclidean",
  seriation_method_col = seriation_method,
  seriation_dist_col = seriation_dist,
  var_fun = "identity",
  grid_col = "white",
  grid_lwd = 0.5,
  anno_tax = NULL,
  anno_vars = NULL,
  ...
)
}
\arguments{
\item{data}{phyloseq or phyloseq extra}

\item{taxa}{list of taxa to include, or NA for all}

\item{tax_anno}{NULL or annotation function for taxa: taxAnnotation() output.}

\item{vars}{selection of variable names from sample_data}

\item{var_anno}{NULL or annotation function for variables: varAnnotation() output.}

\item{cor}{correlation coefficient. pearson/kendall/spearman,
can be abbreviated (used as legend title)}

\item{cor_use}{passed to cor(use = cor_use)}

\item{colors}{output of heat_palette() to set heatmap fill color scheme}

\item{numbers}{output of heat_numbers() to draw numbers on heatmap cells}

\item{taxa_side}{"top"/"right"/"bottom"/"left": controls heatmap orientation and where any
annotations specified in tax_anno are placed}

\item{vars_side}{which side to place any variable annotations specified in var_anno,
must be an adjacent side to taxa_side}

\item{seriation_method}{method to order the rows (in seriation::seriate)}

\item{seriation_dist}{distance to use in seriation_method (if needed)}

\item{seriation_method_col}{method to order the columns (in seriation::seriate)}

\item{seriation_dist_col}{distance to use in seriation_method_col (if needed)}

\item{var_fun}{a function (or name of) to be applied to columns of a matrix of vars
before correlating (but not used in any variable annotations)}

\item{anno_tax}{DEPRECATED:
optional annotation of taxa distributions: tax_anno() list output,
or a pre-made ComplexHeatmap HeatmapAnnotation}

\item{anno_vars}{DEPRECATED: use var_anno argument instead.
Optional annotation of variable distributions:
var_anno() list output, or a pre-made ComplexHeatmap HeatmapAnnotation}

\item{...}{
  Arguments passed on to \code{\link[ComplexHeatmap:Heatmap]{ComplexHeatmap::Heatmap}}
  \describe{
    \item{\code{row_dend_width}}{Width of the row dendrogram, should be a \code{\link[grid]{unit}} object.}
    \item{\code{show_row_dend}}{Whether show row dendrogram?}
    \item{\code{row_dend_gp}}{Graphic parameters for the dendrogram segments. If users already provide a \code{\link[stats]{dendrogram}} object with edges rendered, this argument will be ignored.}
    \item{\code{show_row_names}}{Whether show row names.}
    \item{\code{row_names_gp}}{Graphic parameters for row names.}
    \item{\code{row_names_rot}}{Rotation of row names.}
    \item{\code{row_names_centered}}{Should row names put centered?}
    \item{\code{show_heatmap_legend}}{Whether show heatmap legend?}
  }}

\item{tax_transform}{transformation applied to otu_table before correlating
(and before selection of taxa by name, so e.g. proportions use all taxa)}

\item{gridlines}{list output of heat_grid() for setting gridline style}
}
\description{
Plot correlations between (transformed) microbial abundances and
(selected) numeric-like sample_data variables from a phyloseq object.
}
\details{
Using a data.frame for the data argument is also possible,
in which case the (selected) numeric-like variables will be correlated
with each other, and all arguments relating to taxa will be ignored.
}
\examples{
library(dplyr)
data("dietswap", package = "microbiome")

# create a couple of numerical variables to use
psq <- dietswap \%>\%
  ps_mutate(
    weight = recode(bmi_group, obese = 3, overweight = 2, lean = 1),
    female = if_else(sex == "female", true = 1, false = 0),
    african = if_else(nationality == "AFR", true = 1, false = 0)
  )
psq <- tax_filter(psq, min_prevalence = 1 / 10, min_sample_abundance = 1 / 10)
psq <- tax_agg(psq, "Genus")

# randomly select 20 taxa from the 50 most abundant taxa
set.seed(123)
taxa <- sample(tax_top(psq, n = 50), size = 20)

# NOTE: detection threshold set to 50 as HITchip example data seems to have background noise
ud <- 50

# make simple correlation heatmap with all numeric-like variables
cor_heatmap(
  data = psq, taxa = taxa,
  tax_anno = taxAnnotation(
    Prv. = anno_tax_prev(undetected = ud),
    Abd. = anno_tax_box(undetected = ud)
  )
)

# You can create an annotation object separately in advance
taxAnno <- taxAnnotation(
  Prv. = anno_tax_prev(undetected = ud), Abd. = anno_tax_box(undetected = ud)
)
class(taxAnno) # "function"

# You can select which numeric-like variables to correlate taxa with
cor_heatmap(
  psq, taxa,
  vars = c("african", "female", "weight"), tax_anno = taxAnno
)

# Also you can choose alternative correlation measures
cor_heatmap(psq, taxa, cor = "spearman", tax_anno = taxAnno)

# Annotating variables is possible, and easy with varAnnotation()
cor_heatmap(
  data = psq, taxa = taxa, tax_anno = taxAnno,
  var_anno = varAnnotation(Val. = anno_var_box(size = grid::unit(2, "cm")))
)

# you can transform the variables before correlating by var_fun
# notice this does not affect the data used for annotations
cor_heatmap(
  data = psq, taxa = taxa, tax_anno = taxAnno, var_fun = "exp",
  var_anno = varAnnotation(Val. = anno_var_box(size = grid::unit(2, "cm")))
)

# other and multiple annotations
cor_heatmap(
  data = psq, taxa = taxa[1:10], vars = c("african", "weight", "female"),
  tax_anno = taxAnno,
  var_anno = varAnnotation(
    value = anno_var_hist(size = grid::unit(15, "mm")),
    log10p = anno_var_box(function(x) log10(x + 1))
  )
)

# make the same heatmap, but rotated
cor_heatmap(
  data = psq, taxa = taxa[1:10], vars = c("african", "weight", "female"),
  tax_anno = taxAnno, taxa_side = "top",
  var_anno = varAnnotation(
    value = anno_var_hist(size = grid::unit(15, "mm")),
    log10p = anno_var_box(function(x) log10(x + 1))
  )
)

# You can change the colour scheme used, using heat_palette()
cor_heatmap(
  data = psq, taxa = taxa, tax_anno = taxAnno,
  colors = heat_palette("Green-Orange", rev = TRUE, sym = TRUE)
)

# You can hide or change the style of the numbers with heat_numbers()
cor_heatmap(data = psq, taxa = taxa, tax_anno = taxAnno, numbers = NULL)
cor_heatmap(
  data = psq, taxa = taxa, tax_anno = taxAnno,
  colors = heat_palette("Berlin", rev = TRUE, sym = TRUE),
  numbers = heat_numbers(decimals = 2, col = "white", fontface = "bold")
)

# You can hide or change the style of the grid lines with grid_col & grid_lwd
cor_heatmap(psq, taxa = taxa, tax_anno = taxAnno, grid_col = NA) # hidden
cor_heatmap(psq, taxa = taxa, tax_anno = taxAnno, grid_lwd = 3) # bigger

# You can pass any other argument from `ComplexHeatmap::Heatmap()` to `...`

# e.g. You can set the absolute width and height of the heatmap body
cor_heatmap(
  data = psq, taxa = taxa, tax_anno = taxAnno,
  width = grid::unit(40, "mm"), height = grid::unit(10, "cm")
)

# e.g. You can suppress the legend
cor_heatmap(
  data = psq, taxa = taxa, tax_anno = taxAnno, show_heatmap_legend = FALSE,
  width = grid::unit(40, "mm"), height = grid::unit(10, "cm")
)
}
