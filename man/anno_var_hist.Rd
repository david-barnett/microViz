% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/varAnnotation.R
\name{anno_var_hist}
\alias{anno_var_hist}
\title{Helper to specify heatmap annotation for variable distribution density plot}
\usage{
anno_var_hist(
  fun = identity,
  size = grid::unit(30, "mm"),
  n_breaks = 11,
  border = FALSE,
  gp = grid::gpar(fill = "#CCCCCC"),
  axis = TRUE,
  ...,
  data = NULL,
  vars = NULL,
  which = NULL
)
}
\arguments{
\item{fun}{function applied to all variables, with apply()}

\item{size}{width or height as a grid unit object}

\item{border}{Wether draw borders of the annotation region?}

\item{gp}{Graphic parameters for points. The length of each graphic parameter can be 1, length of \code{x} if \code{x} is a vector, or number of columns of \code{x} is \code{x} is a matrix.}

\item{axis}{Whether to add axis?}

\item{...}{
  Arguments passed on to \code{\link[ComplexHeatmap:anno_density]{ComplexHeatmap::anno_density}}
  \describe{
    \item{\code{axis_param}}{parameters for controlling axis. See \code{\link[ComplexHeatmap]{default_axis_param}} for all possible settings and default parameters.}
  }}

\item{data}{OPTIONAL phyloseq or ps_extra,
only set this to override use of same data as in heatmap}

\item{vars}{OPTIONAL selection vector of variable names,
only set this if providing data argument to override default}

\item{which}{OPTIONAL indicating if it is a 'column' or a 'row' annotation,
only set this if providing data argument to override default}
}
\value{
function or ComplexHeatmap AnnotationFunction object
}
\description{
Use this as an argument to varAnnotation(),
which itself is used by cor_heatmap var_anno argument.
}
\examples{
library(ComplexHeatmap)
set.seed(123)
fakeData <- as.data.frame.matrix(matrix(rnorm(500, 10, 3), ncol = 10))
names(fakeData) <- paste0("var_", 1:10)

# draw the histograms without a heatmap, you will never normally do this!
vp <- viewport(width = 0.75, height = 0.75)
grid.newpage()
pushViewport(vp)
draw(
  anno_var_hist(data = fakeData, vars = names(fakeData), which = "row")
)

grid.newpage()
pushViewport(vp)
draw(
  anno_var_hist(
    data = fakeData, fun = sqrt,
    vars = rev(names(fakeData)), n_breaks = 5,
    which = "column", gp = grid::gpar(fill = 2:6, lwd = c(0.9, 2.5))
  )
)
}
