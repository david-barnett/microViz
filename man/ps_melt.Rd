% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ps_melt.R
\name{ps_melt}
\alias{ps_melt}
\title{Melt phyloseq data object into large data.frame (tibble)}
\usage{
ps_melt(ps)
}
\arguments{
\item{ps}{(Required). An \code{\link{otu_table-class}} or
\code{\link{phyloseq-class}}. Function most useful for phyloseq-class.}
}
\value{
A \code{\link{tibble}} class data frame.
}
\description{
The ps_melt function is a specialized melt function for melting phyloseq objects
(instances of the phyloseq class), usually for producing graphics
with \code{\link[ggplot2]{ggplot}2}.
The naming conventions used in downstream phyloseq graphics functions
have reserved the following variable names that should not be used
as the names of \code{\link{sample_variables}}
or taxonomic \code{\link{rank_names}}.
These reserved names are \code{c("Sample", "Abundance", "OTU")}.
Also, you should not have identical names for
sample variables and taxonomic ranks.
That is, the intersection of the output of the following two functions
\code{\link{sample_variables}}, \code{\link{rank_names}}
should be an empty vector
(e.g. \code{intersect(sample_variables(ps), rank_names(ps))}).
All of these potential name collisions are checked-for
and renamed automatically with a warning.
However, if you (re)name your variables accordingly ahead of time,
it will reduce confusion and eliminate the warnings.

NOTE: Code and documentation copied (and very slightly modified) from an old version of speedyseq by Michael McLaren.
speedyseq reimplements \code{psmelt} from \code{phyloseq} to use functions from the \code{tidyr}
and \code{dplyr} packages. The name in microViz is changed to \code{ps_melt} for consistency with other functions.
}
\details{
Note that ``melted'' phyloseq data is stored much less efficiently, and so
RAM storage issues could arise with a smaller dataset (smaller number of
samples/OTUs/variables) than one might otherwise expect.  For common sizes
of graphics-ready datasets, however, this should not be a problem.  Because
the number of OTU entries has a large effect on the RAM requirement, methods
to reduce the number of separate OTU entries -- for instance by
agglomerating OTUs based on phylogenetic distance using
\code{\link{tip_glom}} -- can help alleviate RAM usage problems.  This
function is made user-accessible for flexibility, but is also used
extensively by plot functions in phyloseq.
}
\examples{
library(ggplot2)
library(phyloseq)
data("GlobalPatterns")
gp_ch <- subset_taxa(GlobalPatterns, Phylum == "Chlamydiae")
mdf <- ps_melt(gp_ch)
mdf2 <- psmelt(gp_ch) # slower
# same dataframe, except with somewhat different row orders
dplyr::all_equal(tibble::as_tibble(mdf), mdf2, convert = TRUE) # TRUE
nrow(mdf2)
ncol(mdf)
colnames(mdf)
head(rownames(mdf))
p <- ggplot(mdf, aes(x = SampleType, y = Abundance, fill = Genus))
p <- p + geom_bar(color = "black", stat = "identity", position = "stack")
# This example plot doesn't make any sense
print(p + coord_flip())
# TODO replace this...
}
\seealso{
\code{\link{psmelt}}
}
