% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/heatmaps-sampleAnnotation.R
\name{anno_sample_cat}
\alias{anno_sample_cat}
\title{Helper to specify comp_heatmap annotation for categorical sample data}
\usage{
anno_sample_cat(
  var,
  col = distinct_palette(),
  renamer = identity,
  size = grid::unit(5, "mm"),
  legend = TRUE,
  legend_title = "",
  box_col = "white",
  box_lwd = 0.5,
  border_col = NA,
  border_lwd = 1,
  data = NULL,
  samples = NULL,
  which = NULL,
  ...
)
}
\arguments{
\item{var}{name of variable to use for annotation data}

\item{col}{Color that maps to \code{x}. If \code{x} is numeric and needs a continuous mapping, \code{col}  should be a color mapping function which accepts a vector of values and returns a vector of colors. Normally it is generated by \code{\link[circlize]{colorRamp2}}. If \code{x} is discrete (numeric or character) and needs a discrete color mapping, \code{col} should be a vector of  colors with levels in \code{x} as vector names. If \code{col} is not specified, the color mapping is randomly generated by \code{ComplexHeatmap:::default_col}.}

\item{renamer}{function to rename levels of variable \code{var}}

\item{size}{width or height as a grid unit object}

\item{data}{OPTIONAL phyloseq or ps_extra,
only set this to override use of same data as in heatmap}

\item{samples}{OPTIONAL selection vector of sample names,
only set this if providing data argument to override default}

\item{which}{OPTIONAL indicating if it is a 'column' or a 'row' annotation,
only set this if providing data argument to override default}

\item{...}{
  Arguments passed on to \code{\link[=anno_cat]{anno_cat}}
  \describe{
    \item{\code{x}}{data vector, treated as categorical}
    \item{\code{width}}{Width of the annotation. The value should be an absolute unit. Width is not allowed to be set for column annotation.}
    \item{\code{height}}{Height of the annotation. The value should be an absolute unit. Height is not allowed to be set for row annotation.}
  }}
}
\value{
vector of values
}
\description{
Use this as an argument to sampleAnnotation(),
which itself is used by comp_heatmap() as sample_anno argument.
}
\examples{
library("ComplexHeatmap")
data("ibd_phylo", package = "corncob")
samples <- phyloseq::sample_names(psq)

# makes a function that takes data, taxa and which (at minimum)
fun <- anno_sample_cat(var = "ibd")

# manually specify the prevalence barplot function by giving it data etc.
heatmapAnnoFunction <- fun(data = psq, which = "row", samples = samples)

# draw the barplot without a heatmap, you will never normally do this!
vp <- viewport(width = 0.75, height = 0.75)

grid::grid.newpage()
pushViewport(vp)
draw(heatmapAnnoFunction)
# A legend is attached by default to anno_cat() output, let's plot that.
pushViewport(viewport(x = 0.75))
draw(attr(heatmapAnnoFunction, "Legend"))

# change some options and specify the data up front
grid::grid.newpage()
pushViewport(vp)
anno_sample_cat(
  data = psq, var = "DiseaseState", samples = samples, which = "column",
  size = grid::unit(5, "cm"), col = distinct_palette(pal = "kelly")
) \%>\%
  draw()
}
