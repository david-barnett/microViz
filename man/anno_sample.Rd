% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sampleAnnotation.R
\name{anno_sample}
\alias{anno_sample}
\title{Helper to specify comp_heatmap annotation for other sample data}
\usage{
anno_sample(var, fun = identity, data = NULL, samples = NULL)
}
\arguments{
\item{var}{name of variable to use for annotation data}

\item{fun}{function to transform variable \code{var}}

\item{data}{OPTIONAL phyloseq or ps_extra,
only set this to override use of same data as in heatmap}

\item{samples}{OPTIONAL selection vector of sample names,
only set this if providing data argument to override default}

\item{...}{
  Arguments passed on to \code{\link[ComplexHeatmap:anno_simple]{ComplexHeatmap::anno_simple}}
  \describe{
    \item{\code{col}}{Color that maps to \code{x}. If \code{x} is numeric and needs a continuous mapping, \code{col}  should be a color mapping function which accepts a vector of values and returns a vector of colors. Normally it is generated by \code{\link[circlize]{colorRamp2}}. If \code{x} is discrete (numeric or character) and needs a discrete color mapping, \code{col} should be a vector of  colors with levels in \code{x} as vector names. If \code{col} is not specified, the color mapping is randomly generated by \code{ComplexHeatmap:::default_col}.}
    \item{\code{na_col}}{Color for NA value.}
  }}
}
\value{
vector of values
}
\description{
Use this as an argument to sampleAnnotation(),
which itself is used by comp_heatmap as sample_anno argument.
}
\examples{
library("ComplexHeatmap")
data("ibd_phylo", package = "corncob")
samples <- phyloseq::sample_names(psq)

# makes a function that takes data, taxa and which (at minimum)
fun <- anno_sample(var = "ibd", col = c("ibd" = "red", "nonibd" = "white"))

# manually specify the prevalence barplot function by giving it data etc.
heatmapAnnoFunction <- fun(data = psq, which = "row", samples = samples)

# draw the barplot without a heatmap, you will never normally do this!
vp <- viewport(width = 0.75, height = 0.75)

grid::grid.newpage()
pushViewport(vp)
draw(heatmapAnnoFunction)

# change some options and specify the data up front
grid::grid.newpage()
pushViewport(vp)
anno_sample(
  data = psq, var = "DiseaseState", samples = samples, which = "column",
  border = TRUE, size = grid::unit(5, "cm"),
  col = c(UC = "red", CD = "green", nonIBD = "white", IBDundef = "grey")
) \%>\%
  draw()

# multi-pack
grid::grid.newpage()
pushViewport(vp)
anno_sample(
  data = psq, var = c("ibd", "DiseaseState"), samples = samples, which = "column",
  size = grid::unit(5, "cm"),
  col = c(
  UC = "red", CD = "green", nonIBD = "white", IBDundef = "grey",
  ibd = "black", nonibd = "white"
  )
) \%>\%
  draw()

# clear drawings
grid::grid.newpage()
}
