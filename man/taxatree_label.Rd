% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/taxatree_label.R
\name{taxatree_label}
\alias{taxatree_label}
\title{Add logical label column to taxatree_stats dataframe}
\usage{
taxatree_label(
  data,
  ...,
  .label_var = "label",
  .node_fun = list(prevalence = prev)
)
}
\arguments{
\item{data}{ps_extra (or phyloseq)}

\item{...}{REQUIRED logical conditions for labelling
e.g. rank == "Phylum", p.value < 0.1 | taxon \%in\% listOfTaxa}

\item{.label_var}{name of label indicator variable to be created.
If you change this, beware that taxatree_plotkey will not work, you will
need to called taxatree_plot_label with}

\item{.node_fun}{named list of length 1 providing \code{taxatree_nodes} \code{fun} arg.
(name of list iterm is available for use in ...)}
}
\value{
ps_extra with (modified) taxatree_stats dataframe
}
\description{
\code{taxatree_label} is used internally by \code{taxatree_plotkey}, but
can also be used prior to \code{taxatree_plots} to label those plots directly

\code{...} arguments are passed to \code{dplyr::filter()},
so all \code{filter} syntax can be used.
}
\details{
If taxatree_stats missing (or if data is a phyloseq)
it will create a plain taxatree_stats dataframe using only taxatree_nodes

\code{node_fun} can also be a precalculated dataframe (output of taxatree_nodes)
but you should probably not use this option.
This is used internally for efficiency inside \code{taxatree_plotkey()}
}
\examples{
# simple example with plain phyloseq input
data("dietswap", package = "microbiome")
labelled <- dietswap \%>\%
  tax_prepend_ranks() \%>\%
  taxatree_label(rank == "Phylum", prevalence > 0.1)

# Note that "prevalence" column was available in data
# because it is created by `taxatree_nodes()` using the named function
# provided to the `node_fun` argument

# ps_Extra is returned
labelled

# notice how both conditions must be met for label column to be TRUE
labelled$taxatree_stats
}
