% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ordin8.R
\name{ordin8}
\alias{ordin8}
\title{Ordinate distance matrix computed by calc_dist}
\usage{
ordin8(
  data,
  method = c("PCoA", "PCA", "NMDS")[1],
  constraints = 1,
  conditions = NULL,
  return = "all"
)
}
\arguments{
\item{data}{list object output from calc_dist or agg_tax (if no distance calculation required e.g. for RDA)}

\item{method}{which ordination method to use? currently one of 'PCoA', 'PCA' or 'NMDS'}

\item{constraints}{(a vector of) valid variable name(s) to constrain PCoA or RDA analyses, or leave as 1 for unconstrained ordination}

\item{conditions}{(a vector of) valid variable name(s) to partial these out of PCoA or RDA analyses with Condition(), or leave as NULL}

\item{return}{choose which parts of list object to return}
}
\value{
list object (or named parts)
}
\description{
Extends functionality of phyloseq::ordinate()
}
\examples{
library(phyloseq)
library(vegan)
data("dietswap", package = "microbiome")

# create a numerical variable to use as constraint
sample_data(dietswap)$female <-
  dplyr::if_else(sample_data(dietswap)$sex == "female", true = 1, false = 0)

# add a couple of missing values to demo automated dropping of observations with missings
sample_data(dietswap)$female[c(3, 4)] <- NA

# create another numeric variable
sample_data(dietswap)$weight <-
  dplyr::recode(sample_data(dietswap)$bmi_group, obese = 3, overweight = 2, lean = 1)

# compute ordination
test <- dietswap \%>\%
  agg_tax("Genus") \%>\%
  calc_dist("bray") \%>\%
  ordin8(constraints = c("weight", "female"))
class(test$ordination)

# compute RDA ("aitchison distance") directly from phyloseq (demo return argument)
test2 <- dietswap \%>\%
  agg_tax("Genus", return = "ps") \%>\%
  microbiome::transform("clr") \%>\%
  ordin8(method = "RDA", constraints = c("weight", "female"), return = "ordination")
ordiplot(test2)

}
