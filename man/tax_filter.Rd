% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tax_filter.R
\name{tax_filter}
\alias{tax_filter}
\title{Filter rare taxa from a phyloseq object}
\usage{
tax_filter(
  ps = ps,
  min_prevalence = 1,
  prev_detection_threshold = 1,
  min_total_abundance = 1,
  min_sample_abundance = 1,
  tax_level = NA,
  names_only = FALSE
)
}
\arguments{
\item{ps}{phyloseq object with unfiltered COUNTS}

\item{min_prevalence}{number or proportion of samples that a taxon must be present in}

\item{prev_detection_threshold}{min counts for a taxon to be considered present in that sample}

\item{min_total_abundance}{minimum total readcount of a taxon, summed across all samples (can be proportion of all counts)}

\item{min_sample_abundance}{if 1 or greater, treat as absolute min abundance, if <1 treat as proportion of sample counts}

\item{tax_level}{if given, aggregates data at named taxonomic rank before filtering, but returns phyloseq at the ORIGINAL level of aggregation!}

\item{names_only}{if names_only is true return only names of taxa, not the phyloseq}
}
\value{
filtered phyloseq object AT ORIGINAL LEVEL OF AGGREGATION (not at the level in tax_level)
}
\description{
Takes a phyloseq object and filtering criteria arguments
}
\details{
Removes taxa (from all samples) that do not meet a given criterion or combination of criteria.
If a value is 1 or greater, it is treatd as an absolute minimum number of samples/reads. If <1, it is treated as proportion of all samples/reads.
}
\examples{
data("dietswap", package = "microbiome")
# Dropping rare and low abundance taxa #
# Filter at unique taxa level, keeping only those with a prevalence of 10\% or more
# and at least 10 thousand reads when summed across all samples.
# Then aggregate to Family level taxonomy.
dietswap \%>\%
  tax_filter(min_prevalence = 0.1, min_total_abundance = 10000) \%>\%
  tax_agg("Family")

# Keeping ubiquitous families #
# keep only families that have at least 1000 counts present in 90\% of samples
# then aggregate the remaining taxa at 'Genus' level
dietswap \%>\%
  tax_filter(tax_level = "Family", min_prevalence = 0.90, prev_detection_threshold = 1000) \%>\%
  tax_agg("Genus")
}
