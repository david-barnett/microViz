% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tax_table_helpers.R
\name{tax_table_helpers}
\alias{tax_table_helpers}
\alias{tax_fill_unknowns}
\alias{taxon_fill_unknowns}
\alias{prepend_ranks}
\title{Fixing duplication problems in phyloseq tax_table}
\usage{
tax_fill_unknowns(ps, unknowns)

taxon_fill_unknowns(taxon_row, unknowns)

prepend_ranks(ps, sep = ": ", nchar = 1)
}
\arguments{
\item{ps}{phyloseq object}

\item{unknowns}{character vector of names that should be 'fixed' e.g. c("", "unknown")}

\item{taxon_row}{a row of a phyloseq tax_table object}

\item{sep}{for prepend_ranks (what to paste in between rank initial and taxon name)}

\item{nchar}{number of characters to use from rank_names}
}
\value{
a modified phyloseq (or a 1-row matrix for \code{taxon_fill_unknowns})
}
\description{
\itemize{
\item \code{tax_fill_unknowns} replaces any specified unknown names with a fully unique name made by pasting together all the higher taxonomic levels and the current rank
\item \code{taxon_fill_unknowns} is an internal helper function for tax_fill_unknowns (so don't use this directly!)
\item \code{prepend_ranks} is a helper function to prepend the start of rank name to each taxon at each rank (useful particularly in case of duplicated taxa names across ranks, e.g. dietswap dataset)
}
}
\details{
\code{tax_fill_unknowns} supports parallel processing with future package, which might be useful if tax_table(ps) is massive (1000s rows)
e.g. future::plan("future::multisession", workers = 3)
}
\examples{
library(dplyr)
library(microbiome)
data(dietswap)
ps <- dietswap

phyloseq::tax_table(ps) \%>\% head()

# test non-unique genera problem handling
phyloseq::tax_table(ps)[c(3, 4, 56), "Genus"] <- "unknown"
phyloseq::tax_table(ps) \%>\% head()

# supports parallel processing with future package
# useful if tax_table(ps) is massive (1000s rows)
# e.g. future::plan("future::multisession", workers = 3)

ps <- tax_fill_unknowns(ps, unknowns = "unknown")

# don't forget to close any parallel sessions
# future::plan("future::sequential")

phyloseq::tax_table(ps) \%>\% head()

ps \%>\%
  prepend_ranks() \%>\%
  tax_table() \%>\%
  head()

# end examples
}
